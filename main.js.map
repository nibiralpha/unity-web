{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/chat/chat.module.ts","webpack:///./src/app/chat/dialog-user/dialog-user-type.ts","webpack:///./src/app/chat/dialog-user/dialog-user.component.css","webpack:///./src/app/chat/dialog-user/dialog-user.component.html","webpack:///./src/app/chat/dialog-user/dialog-user.component.ts","webpack:///./src/app/chat/shared/model/action.ts","webpack:///./src/app/chat/shared/services/socket.service.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatComponent } from './chat/chat.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ChatComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \" .app-content {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  box-sizing: border-box;\\r\\n} \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkNBQUM7RUFDQyxXQUFXO0VBQ1gsWUFBWTtFQUNaLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIC5hcHAtY29udGVudCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn0gXHJcbiJdfQ== */\"","module.exports = \"<mat-sidenav-container fullscreen>\\r\\n  <mat-sidenav #sidenav>\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item href=\\\"https://luixaviles.com\\\" target=\\\"_blank\\\">\\r\\n        <mat-icon mat-list-icon>person</mat-icon>\\r\\n        <span mat-line>Author</span>\\r\\n      </a>\\r\\n      <a mat-list-item href=\\\"https://github.com/luixaviles/socket-io-typescript-chat\\\" target=\\\"_blank\\\">\\r\\n        <mat-icon mat-list-icon>code</mat-icon>\\r\\n        <span mat-line>Source Code</span>\\r\\n      </a>\\r\\n      <a mat-list-item href=\\\"https://medium.com/dailyjs/real-time-apps-with-typescript-integrating-web-sockets-node-angular-e2b57cbd1ec1\\\" target=\\\"_blank\\\">\\r\\n        <mat-icon mat-list-icon>web</mat-icon>\\r\\n        <span mat-line>Blog Post</span>\\r\\n      </a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <div>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n      <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n      <span>Unity Chat</span>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div class=\\\"app-content\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tcc-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  private initModel(): void {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatModule } from './chat/chat.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    ChatModule,\r\n    SharedModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n[mat-fab] {\\r\\n    position: absolute;\\r\\n    right: 2%;\\r\\n    top: 35px;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.chat-container {\\r\\n    position: fixed;\\r\\n    width: 100%; \\r\\n    height: 100%;  \\r\\n}\\r\\n\\r\\n.chat-input {\\r\\n    padding-top: 20px;\\r\\n    width: 80%; \\r\\n}\\r\\n\\r\\n.chat-list {\\r\\n    overflow: auto;\\r\\n    position: fixed;\\r\\n    top: 90px;\\r\\n    left: 25px;\\r\\n    right: 25px;\\r\\n    bottom: 120px;\\r\\n}\\r\\n\\r\\n.chat-list-item-other {\\r\\n    margin-top: 2px;\\r\\n    margin-bottom: 2px;\\r\\n    margin-right: 100px;\\r\\n    border-radius: 5px;\\r\\n    background-color: #E8EAF6;\\r\\n}\\r\\n\\r\\n.chat-list-item-me {\\r\\n  margin-top: 4px;\\r\\n  margin-bottom: 4px;\\r\\n  margin-left: 100px;\\r\\n  border-radius: 5px;\\r\\n  color: white;\\r\\n  background-color: rgb(39, 119, 194);\\r\\n}\\r\\n\\r\\n.main-card {\\r\\n    height: 100%;  \\r\\n}\\r\\n\\r\\n.chat-footer-container {\\r\\n    position:fixed;\\r\\n    bottom:25px;\\r\\n    left:25px;\\r\\n    right:25px;\\r\\n}\\r\\n\\r\\n.chat-notification {\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxTQUFTO0lBQ1QsVUFBVTtBQUNkOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0lBQ2YsU0FBUztJQUNULFVBQVU7SUFDVixXQUFXO0lBQ1gsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQix5QkFBeUI7QUFDN0I7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLG1DQUFtQztBQUNyQzs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztJQUNYLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9jaGF0L2NoYXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5bbWF0LWZhYl0ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDIlO1xyXG4gICAgdG9wOiAzNXB4O1xyXG4gICAgei1pbmRleDogMTtcclxufVxyXG5cclxuLmNoYXQtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlOyBcclxuICAgIGhlaWdodDogMTAwJTsgIFxyXG59XHJcblxyXG4uY2hhdC1pbnB1dCB7XHJcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcclxuICAgIHdpZHRoOiA4MCU7IFxyXG59XHJcblxyXG4uY2hhdC1saXN0IHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiA5MHB4O1xyXG4gICAgbGVmdDogMjVweDtcclxuICAgIHJpZ2h0OiAyNXB4O1xyXG4gICAgYm90dG9tOiAxMjBweDtcclxufVxyXG5cclxuLmNoYXQtbGlzdC1pdGVtLW90aGVyIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRThFQUY2O1xyXG59XHJcblxyXG4uY2hhdC1saXN0LWl0ZW0tbWUge1xyXG4gIG1hcmdpbi10b3A6IDRweDtcclxuICBtYXJnaW4tYm90dG9tOiA0cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDM5LCAxMTksIDE5NCk7XHJcbn1cclxuXHJcbi5tYWluLWNhcmQge1xyXG4gICAgaGVpZ2h0OiAxMDAlOyAgXHJcbn1cclxuXHJcbi5jaGF0LWZvb3Rlci1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246Zml4ZWQ7XHJcbiAgICBib3R0b206MjVweDtcclxuICAgIGxlZnQ6MjVweDtcclxuICAgIHJpZ2h0OjI1cHg7XHJcbn1cclxuXHJcbi5jaGF0LW5vdGlmaWNhdGlvbiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\"","module.exports = \"<button mat-fab (click)=\\\"onClickUserInfo()\\\">\\r\\n  <mat-icon>person</mat-icon>\\r\\n</button>\\r\\n<div class=\\\"chat-container\\\">\\r\\n  <mat-card class=\\\"main-card\\\">\\r\\n    <mat-list class=\\\"chat-list\\\">\\r\\n      <mat-list-item *ngFor=\\\"let message of messages\\\" [ngClass]=\\\"message.sender.type=='candidate' ? 'chat-list-item' : 'chat-list-item-me'\\\">\\r\\n        <img mat-list-avatar [src]=\\\"message.sender.pictureUrl\\\">\\r\\n        <h4 mat-line>\\r\\n          <b>{{message.sender.name}}</b>\\r\\n        </h4>\\r\\n        <p mat-line *ngIf=\\\"message.action === undefined\\\">\\r\\n          <span> {{message.messageBody}} </span>\\r\\n        </p>\\r\\n        <!-- <p mat-line *ngIf=\\\"message.action === action.JOINED\\\" class=\\\"chat-notification\\\">\\r\\n          <span> <b>{{message.from.name}}</b> joined to the conversation. </span>\\r\\n        </p> -->\\r\\n        <!-- <p mat-line *ngIf=\\\"message.action === action.RENAME\\\" class=\\\"chat-notification\\\">\\r\\n          <span> <b>{{message.content.previousUsername}}</b> is now <b>{{message.content.username}}</b> </span>\\r\\n        </p> -->\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n    <div class=\\\"chat-footer-container\\\">\\r\\n      <mat-icon>message</mat-icon>\\r\\n      <mat-form-field class=\\\"chat-input\\\">\\r\\n        <input matInput \\r\\n               #inputMessage \\r\\n               maxlength=\\\"140\\\" \\r\\n               placeholder=\\\"Type your message\\\" \\r\\n               [(ngModel)]=\\\"messageContent\\\" \\r\\n               (keyup.enter)=\\\"sendMessage(messageContent)\\\">\\r\\n        <mat-hint align=\\\"end\\\">{{inputMessage.value.length}}/140</mat-hint>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n<!-- [ngClass]=\\\"[(message.action === undefined && message.from.id === user.id)? 'chat-list-item': '']\\\" -->\"","import { Component, OnInit, ViewChildren, ViewChild, AfterViewInit, QueryList, ElementRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatList, MatListItem } from '@angular/material';\r\nimport * as _ from 'lodash';\r\n\r\nimport { Action } from './shared/model/action';\r\nimport { Event } from './shared/model/event';\r\nimport { Message } from './shared/model/message';\r\nimport { User } from './shared/model/user';\r\nimport { SocketService } from './shared/services/socket.service';\r\nimport { DialogUserComponent } from './dialog-user/dialog-user.component';\r\nimport { DialogUserType } from './dialog-user/dialog-user-type';\r\n\r\n\r\nconst AVATAR_URL = 'https://api.adorable.io/avatars/285';\r\n\r\n@Component({\r\n  selector: 'tcc-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit, AfterViewInit {\r\n  action = Action;\r\n  public me: User;\r\n  public other: User;\r\n  user: User;\r\n  messages: Message[] = [];\r\n  messageContent: string;\r\n  ioConnection: any;\r\n  dialogRef: MatDialogRef<DialogUserComponent> | null;\r\n  defaultDialogUserParams: any = {\r\n    disableClose: true,\r\n    data: {\r\n      title: 'Welcome',\r\n      dialogType: DialogUserType.NEW\r\n    }\r\n  };\r\n\r\n  // getting a reference to the overall list, which is the parent container of the list items\r\n  @ViewChild(MatList, { read: ElementRef }) matList: ElementRef;\r\n\r\n  // getting a reference to the items/messages within the list\r\n  @ViewChildren(MatListItem, { read: ElementRef }) matListItems: QueryList<MatListItem>;\r\n\r\n  constructor(\r\n    private socketService: SocketService, \r\n    public dialog: MatDialog) { \r\n      const chat = socketService.getChat();\r\n      console.log('YOYO');\r\n  \r\n      this.me = chat.participants.me;\r\n      this.other = chat.participants.other;\r\n      this.messages = [];\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    // this.initModel();\r\n    // Using timeout due to https://github.com/angular/angular/issues/14748\r\n    // setTimeout(() => {\r\n    //   this.openUserPopup(this.defaultDialogUserParams);\r\n    // }, 0);\r\n    \r\n    this.socketService.getEventListener().subscribe(event => {\r\n      if (event.type == 'message') {\r\n        console.log(event.data.message);\r\n        let data = event.data.message;\r\n        this.messages.push(data);\r\n      } else if (event.type == 'messagesFetched') {\r\n        event.data.map(message => {\r\n          this.messages.push(message);\r\n        });\r\n        console.log('my messages nigga: ', this.messages);\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // subscribing to any changes in the list of items / messages\r\n    this.matListItems.changes.subscribe(elements => {\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  // auto-scroll fix: inspired by this stack overflow post\r\n  // https://stackoverflow.com/questions/35232731/angular2-scroll-to-bottom-chat-style\r\n  private scrollToBottom(): void {\r\n    try {\r\n      this.matList.nativeElement.scrollTop = this.matList.nativeElement.scrollHeight;\r\n    } catch (err) {\r\n    }\r\n  }\r\n\r\n  // private initModel(): void {\r\n  //   const randomId = this.getRandomId();\r\n  //   this.user = {\r\n  //     id: randomId,\r\n  //     avatar: `${AVATAR_URL}/${randomId}.png`\r\n  //   };\r\n  // }\r\n\r\n  // private getRandomId(): number {\r\n  //   return Math.floor(Math.random() * (1000000)) + 1;\r\n  // }\r\n\r\n  // public onClickUserInfo() {\r\n  //   this.openUserPopup({\r\n  //     data: {\r\n  //       username: this.user.name,\r\n  //       title: 'Edit Details',\r\n  //       dialogType: DialogUserType.EDIT\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // private openUserPopup(params): void {\r\n  //   this.dialogRef = this.dialog.open(DialogUserComponent, params);\r\n  //   this.dialogRef.afterClosed().subscribe(paramsDialog => {\r\n  //     if (!paramsDialog) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     this.user.name = paramsDialog.username;\r\n  //     if (paramsDialog.dialogType === DialogUserType.NEW) {\r\n  //       this.sendNotification(paramsDialog, Action.JOINED);\r\n  //     } else if (paramsDialog.dialogType === DialogUserType.EDIT) {\r\n  //       this.sendNotification(paramsDialog, Action.RENAME);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  private initializeMessageWith(content: string): Message {\r\n    return {\r\n      messageBody: content,\r\n      sender: this.me,\r\n      createdAt: new Date()\r\n    };\r\n  }\r\n\r\n  public sendMessage(message: string): void {\r\n    if (!message) {\r\n      return;\r\n    }\r\n\r\n    const content = this.initializeMessageWith(message);\r\n    this.socketService.broadcast(content);\r\n    this.messageContent = null;\r\n  }\r\n\r\n  // public sendNotification(params: any, action: Action): void {\r\n  //   let message: Message;\r\n\r\n  //   if (action === Action.JOINED) {\r\n  //     message = {\r\n  //       from: this.user,\r\n  //       action: action\r\n  //     }\r\n  //   } else if (action === Action.RENAME) {\r\n  //     message = {\r\n  //       action: action,\r\n  //       content: {\r\n  //         username: this.user.name,\r\n  //         previousUsername: params.previousUsername\r\n  //       }\r\n  //     };\r\n  //   }\r\n  //   // this.socketService.send(message);\r\n  // }\r\n\r\n  public bubbleClass(message: Message): string {\r\n    const sender = this.isMy(message) ? 'me' : 'other';\r\n    console.log(sender);\r\n \r\n    return `chat-list-item-${sender}`;\r\n  }\r\n\r\n  private isMy(message: Message): boolean {\r\n    // console.log(_.isEqual(message.sender, this.me));\r\n    return _.isEqual(message.sender.ID, this.me.ID);\r\n    // return true;ddd\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MaterialModule } from '../shared/material/material.module';\r\n\r\nimport { ChatComponent } from './chat.component';\r\nimport { SocketService } from './shared/services/socket.service';\r\nimport { DialogUserComponent } from './dialog-user/dialog-user.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [ChatComponent, DialogUserComponent],\r\n  providers: [SocketService],\r\n  entryComponents: [DialogUserComponent]\r\n})\r\nexport class ChatModule { }\r\n","export enum DialogUserType {\r\n    NEW,\r\n    EDIT\r\n}\r\n","module.exports = \".mat-dialog-content {\\r\\n    overflow: hidden;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC9kaWFsb2ctdXNlci9kaWFsb2ctdXNlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY2hhdC9kaWFsb2ctdXNlci9kaWFsb2ctdXNlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1kaWFsb2ctY29udGVudCB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59Il19 */\"","module.exports = \"<h2 mat-dialog-title>{{params.title}}</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <mat-form-field>\\r\\n    <input matInput name=\\\"username\\\" placeholder=\\\"Consultant ID\\\" \\r\\n           [(ngModel)]=\\\"params.username\\\" (keyup.enter)=\\\"onSave()\\\" [formControl]=\\\"usernameFormControl\\\" required>\\r\\n    <mat-error>This field is required</mat-error>\\r\\n    <mat-hint>Please type your consultant ID</mat-hint>\\r\\n  </mat-form-field>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions *ngIf=\\\"params?.typeDialog === 'new-user'\\\" [attr.align]=\\\"'end'\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" mat-dialog-close (click)=\\\"onSave()\\\" [disabled]=\\\"usernameFormControl.hasError('required')\\\">Chat!</button>\\r\\n</mat-dialog-actions>\\r\\n\\r\\n<mat-dialog-actions *ngIf=\\\"params?.typeDialog === 'edit-user'\\\" [attr.align]=\\\"'end'\\\">\\r\\n  <button mat-button mat-dialog-close color=\\\"secondary\\\">Close</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" mat-dialog-close (click)=\\\"onSave()\\\">Save</button>\\r\\n</mat-dialog-actions>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'tcc-dialog-user',\r\n  templateUrl: './dialog-user.component.html',\r\n  styleUrls: ['./dialog-user.component.css']\r\n})\r\nexport class DialogUserComponent implements OnInit {\r\n  usernameFormControl = new FormControl('', [Validators.required]);\r\n  previousUsername: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<DialogUserComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public params: any) {\r\n    this.previousUsername = params.username ? params.username : undefined;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public onSave(): void {\r\n    this.dialogRef.close({\r\n      username: this.params.username,\r\n      dialogType: this.params.dialogType,\r\n      previousUsername: this.previousUsername\r\n    });\r\n  }\r\n}\r\n","export enum Action {\r\n    JOINED,\r\n    LEFT,\r\n    RENAME\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Message } from '../model/message';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Chat } from '../model/chat';\r\n\r\n// const SERVER_URL = 'ws://localhost:3000';\r\n\r\n@Injectable()\r\nexport class SocketService {\r\n    private roomId: string;\r\n    private socket: WebSocket;\r\n    private listener: EventEmitter<any> = new EventEmitter();\r\n    public SERVER_URL = 'https://unity-mobile-node.herokuapp.com';\r\n    public SERVER_URL_WS = 'ws://unity-mobile-node.herokuapp.com';\r\n\r\n    constructor(private http: HttpClient) {\r\n      this.roomId = 'etNG3V61LWS6Pzkeb_omuZGMVAOLd1_70tRQblVizWQ~';\r\n      this.socket = new WebSocket(this.SERVER_URL_WS);\r\n      this.socket.onopen = () => {\r\n        this.listener.emit({'type': 'open', 'data': event});\r\n        this.join(this.roomId);\r\n        this.http.get(`${this.SERVER_URL}/messages?roomId=etNG3V61LWS6Pzkeb_omuZGMVAOLd1_70tRQblVizWQ~`)\r\n          .subscribe((data: any) => {\r\n            console.log(data);\r\n            this.listener.emit({'type': 'messagesFetched', 'data': data});\r\n          });\r\n      };\r\n      this.socket.onmessage = e => {\r\n        this.listener.emit({'type': 'message', 'data': JSON.parse(e.data)});\r\n      }\r\n    }\r\n\r\n    getChat(): Chat {\r\n      const me = {\r\n        name: 'Sanjiv Patel',\r\n        type: 'consultant',\r\n        ID: '2',\r\n        pictureUrl: 'https://unsplash.it/100/100?image=837',\r\n        coverUrl: ''\r\n      };\r\n      const other = {\r\n        name: 'Pertemps',\r\n        type: 'candidate',\r\n        ID: '',\r\n        pictureUrl: 'https://media.glassdoor.com/sql/12354/pertemps-squarelogo-1501599154775.png',\r\n        coverUrl: 'https://unsplash.it/400/400?image=531',\r\n      };\r\n   \r\n      const messages = [];\r\n      const chat = {\r\n        room: this.roomId,\r\n        participants: {\r\n          me: me,\r\n          other: other\r\n        },\r\n        messages: messages.sort((a, b) => {\r\n          return a.date - b.date;\r\n        })\r\n      };\r\n   \r\n      return chat;\r\n    }\r\n\r\n    public join(room: string) {\r\n      this.socket.send(JSON.stringify({join: room }));\r\n    }\r\n  \r\n    public broadcast(data: Message) {\r\n      this.socket.send(JSON.stringify({ room: this.roomId, message: data }));\r\n    }\r\n  \r\n    public close() {\r\n      this.socket.close();\r\n    }\r\n  \r\n    public getEventListener() {\r\n        return this.listener;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { \r\n  MatButtonModule, \r\n  MatCardModule,\r\n  MatDialog,\r\n  MatDialogModule,\r\n  MatIconModule, \r\n  MatFormFieldModule,\r\n  MatInputModule, \r\n  MatListModule,\r\n  MatSidenavModule, \r\n  MatToolbarModule, \r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule, \r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatIconModule, \r\n    MatFormFieldModule,\r\n    MatInputModule, \r\n    MatListModule,\r\n    MatSidenavModule, \r\n    MatToolbarModule, \r\n  ],\r\n  exports: [\r\n    MatButtonModule, \r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatIconModule, \r\n    MatFormFieldModule,\r\n    MatInputModule, \r\n    MatListModule,\r\n    MatSidenavModule, \r\n    MatToolbarModule, \r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    MatDialog\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from './material/material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [ \r\n    MaterialModule \r\n  ],\r\n  declarations: []\r\n})\r\nexport class SharedModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","  import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}